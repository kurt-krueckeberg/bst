class stack_tracer {

    std::list<int> list;

public:

    stack_tracer()
    {
    }

    stack_tracer(const stack_tracer&) = default;
    stack_tracer& operator=(const stack_tracer&) = default;

    void push(int i)
    {
      list.push_back(i);
    }
    
    pop()
    {
      list.pop_back();
    }
    
    print()
    {
      std::cout << '[';
    
      for (auto riter = list.rbegin(); riter != list.rend(); ++riter)
           
          // Print out the simulated "stack". USe code above.
          std::cout << *riter << ", ";    //std::cout << '\t' << std::setw(4) << *riter << std::endl;
          
       std::cout << ']' << std::endl;
    }
};
